name: CI
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
env:
  UBSAN_OPTIONS: print_stacktrace=1:halt_on_error=1
  MOLD_SUPPRESS_MACHO_WARNING: 1
jobs:
  build-clang-make:
    strategy:
      matrix:
        target:
        - test
        - test-asan
        - test-tsan
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - uses: rui314/setup-mold@staging
    - name: install-build-deps
      run: sudo apt-get update && sudo ./install-build-deps.sh
    - name: ccache
      uses: hendrikmuhs/ccache-action@v1
    - name: make test
      run: |
        echo "/usr/lib/ccache:/usr/local/opt/ccache/libexec" >> $GITHUB_PATH
        make -j$(nproc) CC=clang CXX=clang++ ${{ matrix.target }}

  build-clang-cmake:
    strategy:
      matrix:
        target:
        - ''
        - '-DMOLD_USE_ASAN=On'
        - '-DMOLD_USE_TSAN=On'
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - uses: rui314/setup-mold@staging
    - name: install-build-deps
      run: sudo apt-get update && sudo ./install-build-deps.sh
    - name: ccache
      uses: hendrikmuhs/ccache-action@v1
    - name: build and test
      run: |
        echo "/usr/lib/ccache:/usr/local/opt/ccache/libexec" >> $GITHUB_PATH
        mkdir build
        cd build
        cmake -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ ${{ matrix.target }} ..
        cmake --build . -j$(nproc)
        ctest . -j$(nproc)

  build-gcc-make:
    runs-on: ubuntu-20.04
    container: gcc:11.1.0
    steps:
    - uses: actions/checkout@v2
    - name: install-build-deps
      run: |
        dpkg --add-architecture i386
        apt-get update
        ./install-build-deps.sh
        apt-get install -y sudo qemu-user gcc-10-i686-linux-gnu gcc-10-aarch64-linux-gnu gcc-10-riscv64-linux-gnu gcc-10-arm-linux-gnueabihf g++-10-i686-linux-gnu g++-10-aarch64-linux-gnu g++-10-riscv64-linux-gnu g++-10-arm-linux-gnueabihf
        ln -sf /usr/bin/i686-linux-gnu-gcc-10 /usr/bin/i686-linux-gnu-gcc
        ln -sf /usr/bin/i686-linux-gnu-g++-10 /usr/bin/i686-linux-gnu-g++
        ln -sf /usr/bin/aarch64-linux-gnu-gcc-10 /usr/bin/aarch64-linux-gnu-gcc
        ln -sf /usr/bin/aarch64-linux-gnu-g++-10 /usr/bin/aarch64-linux-gnu-g++
        ln -sf /usr/bin/arm-linux-gnueabihf-gcc-10 /usr/bin/arm-linux-gnueabihf-gcc
        ln -sf /usr/bin/arm-linux-gnueabihf-g++-10 /usr/bin/arm-linux-gnueabihf-g++
        ln -sf /usr/bin/riscv64-linux-gnu-gcc-10 /usr/bin/riscv64-linux-gnu-gcc
        ln -sf /usr/bin/riscv64-linux-gnu-g++-10 /usr/bin/riscv64-linux-gnu-g++
    - name: ccache
      uses: hendrikmuhs/ccache-action@v1
    - name: make test-all
      run: |
        echo "/usr/lib/ccache:/usr/local/opt/ccache/libexec" >> $GITHUB_PATH
        make -j$(nproc) CC=gcc CXX=g++ test-all

  build-gcc-cmake:
    runs-on: ubuntu-20.04
    container: gcc:11.1.0
    steps:
    - uses: actions/checkout@v2
    - name: install-build-deps
      run: |
        dpkg --add-architecture i386
        apt-get update
        ./install-build-deps.sh
        apt-get install -y sudo qemu-user gcc-10-i686-linux-gnu gcc-10-aarch64-linux-gnu gcc-10-riscv64-linux-gnu gcc-10-arm-linux-gnueabihf g++-10-i686-linux-gnu g++-10-aarch64-linux-gnu g++-10-riscv64-linux-gnu g++-10-arm-linux-gnueabihf
        ln -sf /usr/bin/i686-linux-gnu-gcc-10 /usr/bin/i686-linux-gnu-gcc
        ln -sf /usr/bin/i686-linux-gnu-g++-10 /usr/bin/i686-linux-gnu-g++
        ln -sf /usr/bin/aarch64-linux-gnu-gcc-10 /usr/bin/aarch64-linux-gnu-gcc
        ln -sf /usr/bin/aarch64-linux-gnu-g++-10 /usr/bin/aarch64-linux-gnu-g++
        ln -sf /usr/bin/arm-linux-gnueabihf-gcc-10 /usr/bin/arm-linux-gnueabihf-gcc
        ln -sf /usr/bin/arm-linux-gnueabihf-g++-10 /usr/bin/arm-linux-gnueabihf-g++
        ln -sf /usr/bin/riscv64-linux-gnu-gcc-10 /usr/bin/riscv64-linux-gnu-gcc
        ln -sf /usr/bin/riscv64-linux-gnu-g++-10 /usr/bin/riscv64-linux-gnu-g++
    - name: ccache
      uses: hendrikmuhs/ccache-action@v1
    - name: build and test
      run: |
        echo "/usr/lib/ccache:/usr/local/opt/ccache/libexec" >> $GITHUB_PATH
        mkdir build
        cd build
        cmake -DMOLD_ENABLE_QEMU_TESTS=On ..
        cmake --build . -j$(nproc)
        ctest . -j$(nproc)

  build-macos-make:
    strategy:
      matrix:
        target:
        - test
        - test-asan
    runs-on: macos-11
    steps:
    - uses: actions/checkout@v2
    - uses: rui314/setup-mold@staging
    - name: ccache
      uses: hendrikmuhs/ccache-action@v1
    - name: make test
      run: |
        echo "/usr/lib/ccache:/usr/local/opt/ccache/libexec" >> $GITHUB_PATH
        make -j$(sysctl -n hw.logicalcpu) ${{ matrix.target }}

  build-macos-cmake:
    runs-on: macos-11
    strategy:
      matrix:
        target:
        - ''
        - '-DMOLD_USE_ASAN=On'
    steps:
    - uses: actions/checkout@v2
    - name: ccache
      uses: hendrikmuhs/ccache-action@v1
    - name: build and test
      run: |
        echo "/usr/lib/ccache:/usr/local/opt/ccache/libexec" >> $GITHUB_PATH
        mkdir build
        cd build
        cmake ${{ matrix.target }} ..
        cmake --build . -j$(sysctl -n hw.physicalcpu)
        ctest . -j$(sysctl -n hw.physicalcpu)

  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: build
      run: |
        mkdir build
        cd build
        cmake -T clangcl ..
        cmake --build . -j $Env:NUMBER_OF_PROCESSORS
